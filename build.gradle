/*
 *  The MIT License (MIT)
 *
 *  Copyright (c) 2018 Chris Magnussen and Elior Boukhobza
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 *
 */
buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:1.0.0'
    }
}


plugins {
    id 'org.jetbrains.intellij' version '0.2.17'
    id 'jacoco'
    id 'checkstyle'
    id "org.jetbrains.kotlin.jvm" version "1.2.0"
}

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
}


dependencies {
    compile('com.thoughtworks.xstream:xstream:1.4.10') {
        exclude group: 'xmlpull', module: 'xmlpull'
        exclude group: 'xpp3', module: 'xpp3_min'
    }
    // https://mvnrepository.com/artifact/org.javassist/javassist
    compile group: 'org.javassist', name: 'javassist', version: '3.21.0-GA'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.2.9'
    testCompile group: 'org.objenesis', name: 'objenesis', version: '2.4'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

}
apply plugin: 'org.kordamp.markdown.convert'

apply plugin: 'java'
apply plugin: 'checkstyle'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

apply plugin: "kotlin"

//noinspection GroovyAssignabilityCheck,GrUnresolvedAccess
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    //noinspection GrUnresolvedAccess
    kotlinOptions {
        apiVersion = "1.0"
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        java.srcDirs 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
}

checkstyle {
    configFile = new File(rootDir, "gradle/checkstyle.xml")
    toolVersion = "8.1"
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

markdownToHtml {
    sourceDir new File("$projectDir/docs")
    outputDir new File("$projectDir/docs")
}

version = System.getenv("pluginVersion") ?: pluginVersion

intellij {
    pluginName 'Material Theme'
    type type
    version 'LATEST-EAP-SNAPSHOT'
    downloadSources true
//    sameSinceUntilBuild false
    updateSinceUntilBuild true
    alternativeIdePath idePath
//    systemProperty "idea.platform.prefix","DataGrip"

    patchPluginXml {
        version "$version"
        sinceBuild System.getenv("pluginSinceBuild") ?: sinceBuildP
        changeNotes file("$projectDir/docs/CHANGELOG.html").text
//        untilBuild System.getenv("pluginUntilBuild") ?: untilBuildP
    }

    publishPlugin {
        username System.getenv("publishUsername") ?: publishUsername
        password System.getenv("publishPassword") ?: publishPassword
//        channels = ['eap']
    }
}
compileKotlin {
    kotlinOptions {
        apiVersion = "1.1"
    }
}

